<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>technical on SeleniumHQ Browser Automation</title>
    <link>https://selenium.dev/categories/technical/</link>
    <description>Recent content in technical on SeleniumHQ Browser Automation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 14 Jan 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://selenium.dev/categories/technical/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Source Control</title>
      <link>https://selenium.dev/blog/2013/source-control/</link>
      <pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/blog/2013/source-control/</guid>
      <description>This short technical note is to announce that the Selenium project is now using git on Google Code in place of subversion.
The move has been a long time in the making, and it&amp;#8217;s largely thanks to the efforts of Kristian Rosenvold that we&amp;#8217;ve been able to do the migration and retain the project history. The project owes him a huge thank you! We&amp;#8217;re in the process of migrating the last bits and pieces (none of which are user facing), so there may be some last minute turbulence as we settle everything down.</description>
    </item>
    
    <item>
      <title>Going Atomic: How</title>
      <link>https://selenium.dev/blog/2010/going-atomic-how/</link>
      <pubDate>Sun, 05 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/blog/2010/going-atomic-how/</guid>
      <description>This is the second of my technical posts. Again, if you&amp;#8217;re interested in the internal workings of Selenium 2, then please skip straight to something else. If you&amp;#8217;re interested in how and why we made some of the technical decisions on the project, keep reading&amp;#8230;.
We left our intrepid heroes in a tight spot: they&amp;#8217;d decided to write a shared library of code, to be used by the various webdriver implementations and selenium core, but the requirements for doing this seemed to be at odds with it actually happening.</description>
    </item>
    
    <item>
      <title>Going Atomic: Why?</title>
      <link>https://selenium.dev/blog/2010/going-atomic-why/</link>
      <pubDate>Mon, 16 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/blog/2010/going-atomic-why/</guid>
      <description>This is the first in a series of technical posts by me about the internals of Selenium WebDriver. If you&amp;#8217;re not interested in technical nitty-gritty, then feel free to step away now.
Still here? Excellent.
Let&amp;#8217;s take a step back to just before the Selenium and WebDriver projects merged. There were, very obviously, two separate codebases. Looking closer and with a slightly different perspective, there were more than this. We used the test suites for webdriver to define the behaviour for multiple, largely independent, driver codebases.</description>
    </item>
    
    <item>
      <title>How to use Selenium 2 with Maven</title>
      <link>https://selenium.dev/blog/2010/how-to-use-selenium-2-with-maven/</link>
      <pubDate>Fri, 30 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/blog/2010/how-to-use-selenium-2-with-maven/</guid>
      <description>There are several ways to use Selenium 2:
 If you don&amp;#8217;t have Selenium 1.x legacy code, you might want to directly use on of the new WebDriver implemenations like ChromeDriver, HtmlUnitDriver, FirefoxDriver, or InternetExplorerDriver which provide a nice, small and easy to learn API. If you have Selenium 1.x legacy code, you can still use the well known DefaultSelenium class or the new WebDriverBackedSelenium, which extends DefaultSelenium but uses one of the WebDriver implementations internally.</description>
    </item>
    
  </channel>
</rss>