<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Le Projet d&#39;Automatisation de Navigateur Selenium on Documentation Selenium</title>
    <link>https://selenium.dev/documentation/fr/</link>
    <description>Recent content in Le Projet d&#39;Automatisation de Navigateur Selenium on Documentation Selenium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>2013-{year}</copyright>
    
	<atom:link href="https://selenium.dev/documentation/fr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Capabilities partagées</title>
      <link>https://selenium.dev/documentation/fr/driver_idiosyncrasies/shared_capabilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/driver_idiosyncrasies/shared_capabilities/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 In-order to create a new session by Selenium WebDriver, local end should provide the basic capabilities to remote end. The remote end uses the same set of capabilities to create a session and describes the current session features.
WebDriver provides capabilities that each remote end will/should support the implementation.</description>
    </item>
    
    <item>
      <title>Captchas</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/captchas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/captchas/</guid>
      <description>  Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 CAPTCHA, short for Completely Automated Public Turing test to tell Computers and Humans Apart, is explicitly designed to prevent automation, so don’t try! There are two primary strategies to get around CAPTCHA checks:
 Disable CAPTCHAs in your test environment Add a hook to allow tests to bypass the CAPTCHA  </description>
    </item>
    
    <item>
      <title>Comprendre les composants</title>
      <link>https://selenium.dev/documentation/fr/webdriver/understanding_the_components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/understanding_the_components/</guid>
      <description>Pour créer une suite de tests à l&amp;rsquo;aide de WebDriver, vous devrez comprendre et utiliser efficacement un certain nombre de composants différents. logiciel, différentes personnes utilisent des termes différents pour la même idée. une ventilation de la façon dont les termes sont utilisés dans cette description.
Terminologie  API: Interface de programmation d&amp;rsquo;application. Il s&amp;rsquo;agit de l&amp;rsquo;ensemble des &amp;ldquo;commandes&amp;rdquo; vous utilisez pour manipuler WebDriver. Bibliothèque: Un module de code qui contient les API et le code nécessaires Les bibliothèques sont spécifiques à chaque liaison de langue, par exemple .</description>
    </item>
    
    <item>
      <title>Copyright et attributions</title>
      <link>https://selenium.dev/documentation/fr/front_matter/copyright_and_attributions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/front_matter/copyright_and_attributions/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 The Documentation of Selenium Copyright &amp;copy; 2013-2020 , Software Freedom Conservancy.
Every effort has been made to make this documentation as complete and as accurate as possible, but no warranty or fitness is implied. The information provided is on an “as-is” basis. The authors and the publisher shall have neither liability nor responsibility to any person or entity with respect to any loss or damages arising from the information contained in this book.</description>
    </item>
    
    <item>
      <title>Installer les librairies Selenium</title>
      <link>https://selenium.dev/documentation/fr/selenium_installation/installing_selenium_libraries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/selenium_installation/installing_selenium_libraries/</guid>
      <description>Vous devez d&amp;rsquo;abord installer les fixations Selenium pour votre projet d&amp;rsquo;automatisation. Le processus d&amp;rsquo;installation des bibliothèques dépend de la langue que vous choisissez d&amp;rsquo;utiliser.
Java L&amp;rsquo;installation des bibliothèques Selenium pour Java peut être effectuée à l&amp;rsquo;aide de Maven. Ajoutez la dépendance selenium-java dans votre projet pom.xml:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;selenium-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.X&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; La dépendance selenium-java prend en charge l&amp;rsquo;exécution de votre automatisation projet avec tous les navigateurs pris en charge par Selenium.</description>
    </item>
    
    <item>
      <title>Le projet Selenium et les outils</title>
      <link>https://selenium.dev/documentation/fr/introduction/the_selenium_project_and_tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/introduction/the_selenium_project_and_tools/</guid>
      <description>Selenium contrôle les navigateurs Web Selenium est beaucoup de choses, mais à la base, c&amp;rsquo;est un ensemble d&amp;rsquo;outils pour l&amp;rsquo;automatisation du navigateur Web qui utilise les meilleures techniques disponibles pour contrôler à distance les instances du navigateur et émuler l&amp;rsquo;interaction d&amp;rsquo;un utilisateur avec le navigateur.
Il permet aux utilisateurs de simuler les activités courantes effectuées par les utilisateurs finaux; saisir du texte dans les champs, sélectionner des valeurs déroulantes et cocher des cases, et cliquer sur les liens dans les documents.</description>
    </item>
    
    <item>
      <title>Le serveur Remote WebDriver</title>
      <link>https://selenium.dev/documentation/fr/remote_webdriver/remote_webdriver_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/remote_webdriver/remote_webdriver_server/</guid>
      <description>Le serveur fonctionnera toujours sur la machine avec le navigateur que vous souhaitez tester. Le serveur peut être utilisé à partir de la ligne de commande ou via du code configuration.
Démarrage du serveur à partir de la ligne de commande Une fois que vous avez téléchargé selenium-server-standalone-{VERSION}.jar, placez-le sur l&amp;rsquo;ordinateur avec le navigateur que vous souhaitez tester. Ensuite, à partir de le répertoire avec le pot, exécutez ce qui suit:</description>
    </item>
    
    <item>
      <title>Navigateurs</title>
      <link>https://selenium.dev/documentation/fr/getting_started_with_webdriver/browsers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/getting_started_with_webdriver/browsers/</guid>
      <description>Navigateurs consommateurs Le framework Selenium supporte officiellement les navigateurs suivants:
   Navigateur Mainteneur Versions supportées     Chromium Chromium Toutes versions   Firefox Mozilla 54 and plus récentes   Internet Explorer Selenium 6 et plus récentes   Opera Opera Chromium / Presto 10.5 et plus récentes   Safari Apple 10 et plus récentes    Navigateurs spécialisés Il existe également un ensemble de navigateurs spécialisés, utilisés typiquement dans des environnements de développement.</description>
    </item>
    
    <item>
      <title>Objectifs et fonctionnalitées</title>
      <link>https://selenium.dev/documentation/fr/grid/purposes_and_main_functionalities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/grid/purposes_and_main_functionalities/</guid>
      <description>  Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
  Central entry point for all tests Management and control of the nodes / environment where the browsers run Scaling Running tests in parallel Cross platform testing Load balancing  </description>
    </item>
    
    <item>
      <title>Page object models</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/page_object_models/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/page_object_models/</guid>
      <description>L&amp;rsquo;objet de page est un modèle de conception qui est devenu populaire dans l&amp;rsquo;automatisation des tests pour améliorer la maintenance des tests et réduire la duplication de code. Un objet page est un classe orientée objet qui sert d&amp;rsquo;interface à une page de votre AUT. le les tests utilisent ensuite les méthodes de cette classe d&amp;rsquo;objets de page chaque fois qu&amp;rsquo;ils ont besoin de interagir avec l&amp;rsquo;interface utilisateur de cette page.</description>
    </item>
    
    <item>
      <title>Selenium 1 (Selenium RC)</title>
      <link>https://selenium.dev/documentation/fr/legacy_docs/selenium_rc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/legacy_docs/selenium_rc/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Introduction Selenium RC was the main Selenium project for a long time, before the WebDriver/Selenium merge brought up Selenium 2, a more powerful tool. It is worth to highlight that Selenium 1 is not supported anymore.
How Selenium RC Works First, we will describe how the components of Selenium RC operate and the role each plays in running your test scripts.</description>
    </item>
    
    <item>
      <title>Tour rapide</title>
      <link>https://selenium.dev/documentation/fr/getting_started/quick/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/getting_started/quick/</guid>
      <description>Selenium n&amp;rsquo;est pas juste un outil ou une API mais est composé de nombreux outils.
WebDriver Si vous débutez dans l&amp;rsquo;automatisation de test de site web desktop vous allez utiliser les APIs WebDriver. WebDriver utilise les APIs d&amp;rsquo;automatisation fournies par les distributeurs de navigateur pour les contrôler et exécuter les tests. C&amp;rsquo;est comme si un utilisateur réel utilisait le navigateur. Puisque WebDriver n&amp;rsquo;a pas besoin que ses APIs soient compilées avec le code de l&amp;rsquo;application testée, il est non intrusif par nature.</description>
    </item>
    
    <item>
      <title>A propos du test automatisé</title>
      <link>https://selenium.dev/documentation/fr/introduction/on_test_automation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/introduction/on_test_automation/</guid>
      <description>Commencez par vous demander si vous avez vraiment besoin ou non d&amp;rsquo;un navigateur. Il est probable qu&amp;rsquo;à un moment donné, si vous travaillez sur une application Web complexe, vous devrez ouvrir un navigateur et le tester.
Les tests fonctionnels pour l&amp;rsquo;utilisateur final, tels que les tests au sélénium, sont cependant coûteux à exécuter. En outre, ils nécessitent généralement une infrastructure substantielle être en place pour fonctionner efficacement. C&amp;rsquo;est une bonne règle de toujours se demander si ce que l&amp;rsquo;on veut tester peut être fait en utilisant des approches de test plus légères telles que des tests unitaires ou avec une approche de niveau inférieur.</description>
    </item>
    
    <item>
      <title>Capabilities spécifiques du Driver</title>
      <link>https://selenium.dev/documentation/fr/driver_idiosyncrasies/driver_specific_capabilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/driver_idiosyncrasies/driver_specific_capabilities/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Firefox Define Capabilities using FirefoxOptions FirefoxOptions is the new way to define capabilities for the Firefox browser and should generally be used in preference to DesiredCapabilities.
Java Python C# Ruby JavaScript Kotlin FirefoxOptions options = new FirefoxOptions(); options.addPreference(&amp;#34;network.proxy.type&amp;#34;, 0); driver = new RemoteWebDriver(options);   from selenium.</description>
    </item>
    
    <item>
      <title>Composant d&#39;une Grid</title>
      <link>https://selenium.dev/documentation/fr/grid/components_of_a_grid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/grid/components_of_a_grid/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Hub  Intermediary and manager Accepts requests to run tests Takes instructions from client and executes them remotely on the nodes Manages threads  A Hub is a central point where all your tests are sent. Each Selenium Grid consists of exactly one hub. The hub needs to be reachable from the respective clients (i.</description>
    </item>
    
    <item>
      <title>Conventions typographique</title>
      <link>https://selenium.dev/documentation/fr/front_matter/typographical_conventions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/front_matter/typographical_conventions/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Capitalisation of titles One should avoid title capitalisation, such as A Very Fine Heading, and instead go for A very fine heading. Gratutious capitalisation, or title case, often show a misunderstanding of – or a disregard for – orthographic conventions. We prefer what is known as sentence case, with a single initial capital to start headers.</description>
    </item>
    
    <item>
      <title>Driver tiers et plugins</title>
      <link>https://selenium.dev/documentation/fr/getting_started_with_webdriver/third_party_drivers_and_plugins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/getting_started_with_webdriver/third_party_drivers_and_plugins/</guid>
      <description>Selenium peut être étendu à travers l&amp;rsquo;utilisation de plugins. Vous trouverez ici un certain nombre de plugins créés et maintenus par des tierces parties. Pour de plus amples information sur la création de plugin ou pour en ajouter à la liste, consultez la documentation.
Veuillez noter que ces plugins ne sont pas supportés, maintenus ou hébergés par le projet Selenium. De plus, soyez avertis que les plugins listés ci-dessous ne sont pas nécessairement sous Apache License v.</description>
    </item>
    
    <item>
      <title>Installer les binaires WebDriver</title>
      <link>https://selenium.dev/documentation/fr/selenium_installation/installing_webdriver_binaries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/selenium_installation/installing_webdriver_binaries/</guid>
      <description>Pour exécuter votre projet et contrôler le navigateur, vous devez installer des binaires WebDriver spécifiques au navigateur.
Téléchargez le binaire WebDriver pris en charge par votre navigateur et placez-le dans le CHEMIN système.</description>
    </item>
    
    <item>
      <title>Langue spécifique au domaine</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/domain_specific_language/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/domain_specific_language/</guid>
      <description>Une langue spécifique au domaine (DSL) est un système qui fournit à l&amp;rsquo;utilisateur un moyen expressif de résoudre un problème. Il permet à un utilisateur de interagir avec le système à leurs conditions - pas seulement parler de programmeur.
Vos utilisateurs, en général, ne se soucient pas de l&amp;rsquo;apparence de votre site. Ils ne se soucient de la décoration, des animations ou des graphismes. Ils voulez utiliser votre système pour pousser leurs nouveaux employés à travers le processus avec une difficulté minimale; ils veulent réserver un voyage en Alaska; ils veulent configurer et acheter des licornes à prix réduit.</description>
    </item>
    
    <item>
      <title>Le client Remote WebDriver</title>
      <link>https://selenium.dev/documentation/fr/remote_webdriver/remote_webdriver_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/remote_webdriver/remote_webdriver_client/</guid>
      <description>Pour exécuter un client WebDriver distant, nous devons d&amp;rsquo;abord nous connecter au RemoteWebDriver. Nous le faisons en pointant l&amp;rsquo;URL vers l&amp;rsquo;adresse du serveur exécutant nos tests. Afin de personnaliser notre configuration, nous avons défini les capacités souhaitées. Voici un exemple d&amp;rsquo;instanciation d&amp;rsquo;un objet WebDriver distant pointant vers notre serveur Web distant, www.example.com, exécuter nos tests sur Firefox.
Java Python C# Ruby JavaScript Kotlin FirefoxOptions firefoxOptions = new FirefoxOptions(); WebDriver driver = new RemoteWebDriver(new URL(&amp;#34;http://www.</description>
    </item>
    
    <item>
      <title>Les pré-requis de WebDriver</title>
      <link>https://selenium.dev/documentation/fr/webdriver/driver_requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/driver_requirements/</guid>
      <description>Grâce à WebDriver, Selenium prend en charge tous les principaux navigateurs du marché tels que Chrom(ium), Firefox, Internet Explorer, Opera et Safari. Dans la mesure du possible, WebDriver pilote le navigateur en utilisant la prise en charge intégrée du navigateur pour l&amp;rsquo;automatisation, bien que tous les navigateurs n&amp;rsquo;aient pas de support officiel pour la télécommande.
L&amp;rsquo;objectif de WebDriver est d&amp;rsquo;émuler l&amp;rsquo;interaction d&amp;rsquo;un utilisateur réel avec le navigateur le plus près possible.</description>
    </item>
    
    <item>
      <title>Migrating from RC to WebDriver</title>
      <link>https://selenium.dev/documentation/fr/legacy_docs/migrating_from_rc_to_webdriver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/legacy_docs/migrating_from_rc_to_webdriver/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 How to Migrate to Selenium WebDriver A common question when adopting Selenium 2 is what&amp;rsquo;s the correct thing to do when adding new tests to an existing set of tests? Users who are new to the framework can begin by using the new WebDriver APIs for writing their tests.</description>
    </item>
    
    <item>
      <title>Travailler avec les couleurs</title>
      <link>https://selenium.dev/documentation/fr/support_packages/working_with_colours/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/support_packages/working_with_colours/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 You will occasionally want to validate the colour of something as part of your tests; the problem is that colour definitions on the web are not constant. Would it not be nice if there was an easy way to compare a HEX representation of a colour with a RGB representation of a colour, or a RGBA representation of a colour with a HSLA representation of a colour?</description>
    </item>
    
    <item>
      <title>Téléchargement de fichier</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/file_downloads/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/file_downloads/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Whilst it is possible to start a download by clicking a link with a browser under Selenium&amp;rsquo;s control, the API does not expose download progress, making it less than ideal for testing downloaded files. This is because downloading files is not considered an important aspect of emulating user interaction with the web platform.</description>
    </item>
    
    <item>
      <title>Codes réponse HTTP</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/http_response_codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/http_response_codes/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 For some browser configurations in Selenium RC, Selenium acted as a proxy between the browser and the site being automated. This meant that all browser traffic passed through Selenium could be captured or manipulated. The captureNetworkTraffic() method purported to capture all of the network traffic between the browser and the site being automated, including HTTP response codes.</description>
    </item>
    
    <item>
      <title>Generer l&#39;état de l&#39;application</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/generating_application_state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/generating_application_state/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Selenium should not be used to prepare a test case. All repetitive actions and preparations for a test case, should be done through other methods. For example, most web UIs have authentication (e.g. a login form). Eliminating logging in via web browser before every test will improve both the speed and stability of the test.</description>
    </item>
    
    <item>
      <title>Installer le serveur Standalone</title>
      <link>https://selenium.dev/documentation/fr/selenium_installation/installing_standalone_server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/selenium_installation/installing_standalone_server/</guid>
      <description>Si vous prévoyez d&amp;rsquo;utiliser Grid, vous devez télécharger le selenium-server-standalone JAR. Tous les composants sont disponibles via selenium-server. Le JAR autonome contient tout, y compris le serveur Selenium distant et les liaisons côté client. Cela signifie que si vous utilisez le la jar selenium-server-standalone dans votre projet, vous n&amp;rsquo;avez pas besoin d&amp;rsquo;ajouter de sélénium-java ou un le jar spécifique au navigateur.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;selenium-server&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.X&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;</description>
    </item>
    
    <item>
      <title>Localiser des éléments</title>
      <link>https://selenium.dev/documentation/fr/getting_started_with_webdriver/locating_elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/getting_started_with_webdriver/locating_elements/</guid>
      <description>Localiser des éléments Une des techniques fondamentales à maîtriser lorsque l&amp;rsquo;on utilise WebDriver consiste à chercher des éléments sur une page. WebDriver offre pour cela un ensemble pré-défini de type de selecteurs, parmi lesquels la recherche d&amp;rsquo;une élément par son attribut ID:
Java Python C# Ruby JavaScript Kotlin WebElement cheese = driver.findElement(By.id(&amp;#34;fromage&amp;#34;));   driver.find_element_by_id(&amp;#34;fromage&amp;#34;)   IWebElement element = driver.FindElement(By.Id(&amp;#34;fromage&amp;#34;));   cheese = driver.find_element(id: &amp;#39;cheese&amp;#39;)   const fromage = driver.</description>
    </item>
    
    <item>
      <title>Manipulation du navigateur</title>
      <link>https://selenium.dev/documentation/fr/webdriver/browser_manipulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/browser_manipulation/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Ruby Ruby is not installed by default on Windows. Download the latest version and run the installer. You can leave all settings at default values, except at the Installation Destination and Optional Tasks screen check Add Ruby executables to your PATH checkbox. To drive any browser, you have to install selenium-webdriver Ruby gem.</description>
    </item>
    
    <item>
      <title>Mettre en place votre propre Grid</title>
      <link>https://selenium.dev/documentation/fr/grid/setting_up_your_own_grid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/grid/setting_up_your_own_grid/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 To use Selenium Grid, you need to maintain your own infrastructure for the nodes. As this can be a cumbersome and time intense effort, many organizations use IaaS providers such as Amazon EC2 and Google Compute to provide this infrastructure.
Other options include using providers such as Sauce Labs or Testing Bot who provide a Selenium Grid as a service in the cloud.</description>
    </item>
    
    <item>
      <title>Runner HTML</title>
      <link>https://selenium.dev/documentation/fr/legacy_docs/html-runner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/legacy_docs/html-runner/</guid>
      <description>Selenium HTML-runner permet d&amp;rsquo;exécuter des Test Suites depuis la ligne de commande. Les Tests Suites sont des exports HTML depuis Selenium IDE ou autre outil compatible.
Informations générales  Les combinaisons de version de geckodriver / firefox / selenium-html-runner sont importantes. Il doit y avoir une matrice de compatibilité quelque part. selenium-html-runner exécute seulement des Test Suites (et non pas des Test Case, comme un export de Monitis Transaction Monitor).</description>
    </item>
    
    <item>
      <title>Travailler avec les éléments select</title>
      <link>https://selenium.dev/documentation/fr/support_packages/working_with_select_elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/support_packages/working_with_select_elements/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Select elements can require quite a bit of boiler plate code to automate. To reduce this and make your tests cleaner, there is a Select class in the Selenium support package. To use it, you will need the following import statement:
Java Python C# Ruby JavaScript Kotlin import org.</description>
    </item>
    
    <item>
      <title>Types  de test</title>
      <link>https://selenium.dev/documentation/fr/introduction/types_of_testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/introduction/types_of_testing/</guid>
      <description>Test d&amp;rsquo;acceptation Ce type de test est effectué pour déterminer si un produit fonction correspond à ses besoins. Cela implique généralement les commentaires ou les spécifications du client.
Pour les applications web, l&amp;rsquo;automatisation de ces tests peut se faire directement avec Selenium en simulant le comportement attendu de l&amp;rsquo;utilisateur. Cette simulation peut être effectuée par enregistrement / lecture ou par différentes langues prises en charge comme expliqué dans cette documentation.</description>
    </item>
    
    <item>
      <title>A propos de cette documentation</title>
      <link>https://selenium.dev/documentation/fr/introduction/about_this_documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/introduction/about_this_documentation/</guid>
      <description>Cette documentation, tout comme le code lui-même, est maintenue à 100% par des volontaires de la communauté Selenium. Beaucoup font partie des utilisateurs de la première heure, mais encore plus sont des utilisateurs récents, et ont donné de leur temps pour améliorer l&amp;rsquo;accueil des nouveaux utilisateurs.
Si vous rencontrez un problème avec la documentation, nous souhaitons le savoir ! La meilleure façon de communiquer un problème est de visiter https://github.com/seleniumhq/seleniumhq.github.io/issues et de vérifier si ce problème a déjà été remonté.</description>
    </item>
    
    <item>
      <title>Actions de la souris en détail</title>
      <link>https://selenium.dev/documentation/fr/support_packages/mouse_and_keyboard_actions_in_detail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/support_packages/mouse_and_keyboard_actions_in_detail/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Mouse represents a mouse event. Mouse actions are performed by using low-level interface which allows us to provide virtualized device input action to the web browser.
clickAndHold It will move to the element and clicks (without releasing) in the middle of the given element.
Java Python C# Ruby JavaScript Kotlin import org.</description>
    </item>
    
    <item>
      <title>Bouchonner les appels externes</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/mock_external_services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/mock_external_services/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Eliminating the dependencies on external services will greatly improve the speed and stability of your tests.</description>
    </item>
    
    <item>
      <title>Gmail, email and logins Facebook</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/gmail_email_and_facebook_logins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/gmail_email_and_facebook_logins/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 For multiple reasons, logging into sites like Gmail and Facebook using WebDriver is not recommended. Aside from being against the usage terms for these sites (where you risk having the account shut down), it is slow and unreliable.
The ideal practice is to use the APIs that email providers offer, or in the case of Facebook the developer tools service which exposes an API for creating test accounts, friends and so forth.</description>
    </item>
    
    <item>
      <title>Legacy Selenium IDE</title>
      <link>https://selenium.dev/documentation/fr/legacy_docs/selenium_ide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/legacy_docs/selenium_ide/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Introduction The Selenium-IDE (Integrated Development Environment) is the tool you use to develop your Selenium test cases. It’s an easy-to-use Firefox plug-in and is generally the most efficient way to develop test cases. It also contains a context menu that allows you to first select a UI element from the browser’s currently displayed page and then select from a list of Selenium commands with parameters pre-defined according to the context of the selected UI element.</description>
    </item>
    
    <item>
      <title>Réaliser des action sur l&#39;AUT*</title>
      <link>https://selenium.dev/documentation/fr/getting_started_with_webdriver/performing_actions_on_the_aut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/getting_started_with_webdriver/performing_actions_on_the_aut/</guid>
      <description>Il est possible de renseigner le texte d&amp;rsquo;un élément web grâce à la méthode sendKeys, comme suit:
Java Python C# Ruby JavaScript Kotlin String name = &amp;#34;Charles&amp;#34;; driver.findElement(By.name(&amp;#34;name&amp;#34;)).sendKeys(name);   name = &amp;#34;Charles&amp;#34; driver.find_element_by_name(&amp;#34;name&amp;#34;).send_keys(name)   string name = &amp;#34;Charles&amp;#34;; driver.FindElement(By.Name(&amp;#34;name&amp;#34;)).SendKeys(name);   name = &amp;#34;Charles&amp;#34; driver.find_element(name: &amp;#34;name&amp;#34;).send_keys(name)   const name = &amp;#34;Charles&amp;#34;; await driver.findElement(By.name(&amp;#39;name&amp;#39;)).sendKeys(name);   val name = &amp;#34;Charles&amp;#34; driver.findElement(By.name(&amp;#34;name&amp;#34;)).sendKeys(name)     Certaines applications web utilisent des librairies Javascript pour ajouter des fonctionnalités de drag-and-drop.</description>
    </item>
    
    <item>
      <title>Waits</title>
      <link>https://selenium.dev/documentation/fr/webdriver/waits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/waits/</guid>
      <description>WebDriver peut généralement être considéré comme ayant une API de blocage. Parce que c&amp;rsquo;est une bibliothèque hors processus qui instruit le navigateur à faire, et parce que la plate-forme Web a une nature intrinsèquement asynchrone, WebDriver ne suit pas l&amp;rsquo;état actif en temps réel du DOM. Cela s&amp;rsquo;accompagne de quelques défis que nous aborderons ici.
De l&amp;rsquo;expérience, la plupart des intermittents résultant de l&amp;rsquo;utilisation de Selenium et de WebDriver sont liés aux conditions de concurrence qui se produisent entre le navigateur et les instructions de l&amp;rsquo;utilisateur.</description>
    </item>
    
    <item>
      <title>When to use Grid</title>
      <link>https://selenium.dev/documentation/fr/grid/when_to_use_grid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/grid/when_to_use_grid/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Generally speaking, there’s two reasons why you might want to use Grid.
 To run your tests against multiple browsers, multiple versions of browser, and browsers running on different operating systems. To reduce the time it takes for the test suite to complete a test pass.  Grid is used to speed up the execution of a test pass by using multiple machines to run tests in parallel.</description>
    </item>
    
    <item>
      <title>Classes de support</title>
      <link>https://selenium.dev/documentation/fr/webdriver/support_classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/support_classes/</guid>
      <description>Les classes de support WebDriver sont fournies pour simplifier la maintenance de votre code.Elles fournissent une belle abstraction pour faciliter la modélisation des éléments HTML en tant qu&amp;rsquo;objets de domaine, ainsi que des méthodes d&amp;rsquo;aide pour rendre l&amp;rsquo;utilisation de ces objets facile à raisonner.
 Stratégies de localisation Événements LoadableComponent ThreadGuard etc.  Commençons:
ThreadGuard  Cette classe est uniquement disponible dans la liaison Java
 ThreadGuard vérifie qu&amp;rsquo;un pilote est appelé uniquement à partir du même thread qui l&amp;rsquo;a créé.</description>
    </item>
    
    <item>
      <title>Dépéndence des tests</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/test_dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/test_dependency/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 A common idea and misconception about automated testing is regarding a specific test order. Your tests should be able to run in any order, and not rely on other tests to complete in order to be successful.</description>
    </item>
    
    <item>
      <title>Reporting amélioré</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/improved_reporting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/improved_reporting/</guid>
      <description>Le sélénium n&amp;rsquo;est pas conçu pour rendre compte de l&amp;rsquo;état des cas de test courir. Profitant des capacités de rapport intégrées de l&amp;rsquo;unité les cadres de test sont un bon début. La plupart des cadres de tests unitaires ont rapports pouvant générer des rapports au format xUnit ou HTML. xUnit les rapports sont populaires pour importer des résultats dans une intégration continue (CI) comme Jenkins, Travis, Bamboo, etc. Voici quelques liens pour plus d&amp;rsquo;informations sur les sorties de rapports pour plusieurs langues.</description>
    </item>
    
    <item>
      <title>Alerts, prompts et confirmations Javascript</title>
      <link>https://selenium.dev/documentation/fr/webdriver/js_alerts_prompts_and_confirmations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/js_alerts_prompts_and_confirmations/</guid>
      <description>WebDriver fournit une API pour travailler avec les trois types de messages contextuels natifs proposés par JavaScript. Ces popups sont stylisés par le navigateur et offrent une personnalisation limitée.
Alerts Le plus simple d&amp;rsquo;entre eux est appelé une alerte, qui montre une message personnalisé, et un seul bouton qui rejette l&amp;rsquo;alerte, étiqueté dans la plupart des navigateurs comme OK. Il peut également être ignoré dans la plupart des navigateurs par en appuyant sur le bouton de fermeture, mais cela fera toujours la même chose que le bouton OK.</description>
    </item>
    
    <item>
      <title>Eviter de partager l&#39;état</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/avoid_sharing_state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/avoid_sharing_state/</guid>
      <description>Bien que mentionné à plusieurs endroits, il convient de le mentionner à nouveau. Assurer les tests sont isolés les uns des autres.
 Ne partagez pas les données de test. Imaginez plusieurs tests qui interrogent chacun la base de données pour les commandes valides avant d&amp;rsquo;en choisir une pour effectuer une action. Devrait deux tests prenez la même commande que vous risquez d&amp;rsquo;obtenir un comportement inattendu.
 Nettoyez les données périmées dans l&amp;rsquo;application qui pourraient être récupérées par un autre test par ex.</description>
    </item>
    
    <item>
      <title>Test de performance</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/performance_testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/performance_testing/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Performance testing using Selenium and WebDriver is generally not advised. Not because it is incapable but because it is not optimised for the job and you are unlikely to get good results.
It may seem ideal to performance test in the context of the user but a suite of WebDriver tests are subjected to many points of external and internal fragility which are beyond your control; for example browser startup speed, speed of HTTP servers, response of third party servers that host JavaScript or CSS, and the instrumentation penalty of the WebDriver implementation itself.</description>
    </item>
    
    <item>
      <title>Working with cookies</title>
      <link>https://selenium.dev/documentation/fr/support_packages/working_with_cookies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/support_packages/working_with_cookies/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 A cookie is a small piece of data that is sent from a website and stored in your computer. Cookies are mostly used to recognise the user and load the stored information.
WebDriver API provides a way to interact with cookies with built-in methods:
Add Cookie It is used to add a cookie to the current browsing context.</description>
    </item>
    
    <item>
      <title>Indépendence des tests</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/test_independency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/test_independency/</guid>
      <description>Écrivez chaque test comme sa propre unité. Écrivez les tests d&amp;rsquo;une manière qui ne sera pas dépendant d&amp;rsquo;autres tests pour effectuer:
Disons qu&amp;rsquo;il existe un système de gestion de contenu avec lequel vous pouvez créer du contenu personnalisé qui apparaît ensuite sur votre site Web sous forme de module après la publication et la synchronisation entre le CMS et le serveur peut prendre un certain temps. application.
Une mauvaise façon de tester votre module est que le contenu est créé et publié dans un test, puis vérifier le module dans un autre test.</description>
    </item>
    
    <item>
      <title>Link spidering</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/link_spidering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/link_spidering/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Using WebDriver to spider through links is not a recommended practice not because it cannot be done, but because it’s definitely not the most ideal tool. WebDriver needs time to start up, and can take several seconds up to a minute depending on how your test is written, just to get to the page and traverse through the DOM.</description>
    </item>
    
    <item>
      <title>Proxys HTTP</title>
      <link>https://selenium.dev/documentation/fr/webdriver/http_proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/http_proxies/</guid>
      <description>Un serveur proxy sert d&amp;rsquo;intermédiaire pour les demandes entre un client et un serveur. En toute simplicité, le trafic circule via le serveur proxy en route vers l&amp;rsquo;adresse vous avez demandé et retour.
Un serveur proxy pour les scripts d&amp;rsquo;automatisation avec Le Selenium pourrait être utile pour:
 Capturez le trafic réseau Mock backend calls made by the website Accéder au site Web demandé sous un réseau complexe topologies ou restrictions / politiques d&amp;rsquo;entreprise strictes.</description>
    </item>
    
    <item>
      <title>Considerer l&#39;utilisation d&#39;une API fluent</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/consider_using_a_fluent_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/consider_using_a_fluent_api/</guid>
      <description>Martin Fowler a inventé le terme &amp;ldquo;Fluent API&amp;rdquo;. Sélénium déjà implémente quelque chose comme ça dans leur classe FluentWait, qui est conçu comme une alternative à la classe standard Wait. Vous pouvez activer le modèle de conception de l&amp;rsquo;API Fluent dans votre objet de page puis interrogez la page de recherche Google avec un extrait de code comme celui-ci:
driver.get( &amp;#34;http://www.google.com/webhp?hl=en&amp;amp;amp;tab=ww&amp;#34; ); GoogleSearchPage gsp = new GoogleSearchPage(); gsp.withFluent().setSearchString().clickSearchButton(); La classe d&amp;rsquo;objets de page Google avec ce comportement fluide pourrait ressembler à ceci:</description>
    </item>
    
    <item>
      <title>Stratégie de chargement de la page</title>
      <link>https://selenium.dev/documentation/fr/webdriver/page_loading_strategy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/page_loading_strategy/</guid>
      <description>Définit la stratégie de chargement des pages de la session en cours. Par défaut, lorsque Selenium WebDriver charge une page, il suit le normal pageLoadStrategy. Il est toujours recommandé d&amp;rsquo;arrêter le téléchargement de ressources (comme les images, css, js) lorsque le chargement de la page prend beaucoup de temps.
La propriété document.readyState d&amp;rsquo;un document décrit l&amp;rsquo;état de chargement du document actuel. Par défaut, WebDriver ne répondra pas à un driver.</description>
    </item>
    
    <item>
      <title>Nouveau navigateur par test</title>
      <link>https://selenium.dev/documentation/fr/guidelines_and_recommendations/fresh_browser_per_test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/guidelines_and_recommendations/fresh_browser_per_test/</guid>
      <description>Commencez chaque test à partir d&amp;rsquo;un état connu propre. Idéalement, faites tourner une nouvelle machine virtuelle pour chaque test. Si la rotation d&amp;rsquo;une nouvelle machine virtuelle n&amp;rsquo;est pas pratique, démarrez au moins un nouveau WebDriver pour chaque test. Pour Firefox, démarrez un WebDriver avec votre profil connu.
FirefoxProfile profile = new FirefoxProfile(new File(&amp;#34;pathToFirefoxProfile&amp;#34;)); WebDriver driver = new FirefoxDriver(profile);</description>
    </item>
    
    <item>
      <title>Web element</title>
      <link>https://selenium.dev/documentation/fr/webdriver/web_element/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/web_element/</guid>
      <description>WebElement représente un élément DOM. Les WebElements peuvent être trouvés en recherchant racine du document à l&amp;rsquo;aide d&amp;rsquo;une instance WebDriver ou en recherchant sous une autre WebElement
L&amp;rsquo;API WebDriver fournit des méthodes intégrées pour trouver les WebElements qui sont basé sur différentes propriétés comme ID, nom, classe, XPath, sélecteurs CSS, texte de lien, etc.
Find Element Il est utilisé pour rechercher un élément et renvoie une première référence WebElement unique correspondante, qui peut être utilisé pour de futures actions d&amp;rsquo;élément</description>
    </item>
    
    <item>
      <title>Clavier</title>
      <link>https://selenium.dev/documentation/fr/webdriver/keyboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/webdriver/keyboard/</guid>
      <description>Le clavier représente un événement KeyBoard. Les actions du clavier sont effectuées à l&amp;rsquo;aide de bas niveau interface qui nous permet de fournir une entrée d&amp;rsquo;appareil virtualisé au navigateur Web.
sendKeys SendKeys tape une séquence de touches dans l&amp;rsquo;élément DOM même si une séquence de touches de modification est rencontrée.
Java Python C# Ruby JavaScript Kotlin import org.openqa.selenium.By;import org.openqa.selenium.Keys;import org.openqa.selenium.WebDriver;import org.openqa.selenium.firefox.FirefoxDriver;public class HelloSelenium {public static void main(String[] args) {WebDriver driver = new FirefoxDriver();try {// Navigate to Url driver.</description>
    </item>
    
    <item>
      <title>Contributing to the Selenium Site &amp; Documentation</title>
      <link>https://selenium.dev/documentation/fr/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/contributing/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Selenium is a big software project, its site and documentation are key to understanding how things work and learning effective ways to exploit its potential.
This project contains both Selenium&amp;rsquo;s site and documentation. This is an ongoing effort (not targeted at any specific release) to provide updated information on how to use Selenium effectively, how to get involved and how to contribute to Selenium.</description>
    </item>
    
  </channel>
</rss>