<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mauvaises pratiques on Documentation Selenium</title>
    <link>https://selenium.dev/documentation/fr/worst_practices/</link>
    <description>Recent content in Mauvaises pratiques on Documentation Selenium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>2013-{year}</copyright>
    
	<atom:link href="https://selenium.dev/documentation/fr/worst_practices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Captchas</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/captchas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/captchas/</guid>
      <description>CAPTCHA, abréviation de Completely Automated Public Turing test to tell Computers and Humans Apart, est explicitement conçu pour empêcher l&amp;rsquo;automatisation, alors n&amp;rsquo;essayez pas! Il existe deux stratégies principales pour contourner les chèques CAPTCHA:
 Désactivez CAPTCHA dans votre environnement de test Ajoutez un crochet pour permettre aux tests de contourner le CAPTCHA  </description>
    </item>
    
    <item>
      <title>Téléchargement de fichier</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/file_downloads/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/file_downloads/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 Whilst it is possible to start a download by clicking a link with a browser under Selenium&amp;rsquo;s control, the API does not expose download progress, making it less than ideal for testing downloaded files. This is because downloading files is not considered an important aspect of emulating user interaction with the web platform.</description>
    </item>
    
    <item>
      <title>Codes réponse HTTP</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/http_response_codes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/http_response_codes/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 For some browser configurations in Selenium RC, Selenium acted as a proxy between the browser and the site being automated. This meant that all browser traffic passed through Selenium could be captured or manipulated. The captureNetworkTraffic() method purported to capture all of the network traffic between the browser and the site being automated, including HTTP response codes.</description>
    </item>
    
    <item>
      <title>Gmail, email and logins Facebook</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/gmail_email_and_facebook_logins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/gmail_email_and_facebook_logins/</guid>
      <description>Pour plusieurs raisons, vous connecter à des sites comme Gmail et Facebook l&amp;rsquo;utilisation de WebDriver n&amp;rsquo;est pas recommandée. En plus d&amp;rsquo;être contre les conditions d&amp;rsquo;utilisation de ces sites (où vous risquez de fermer le compte), c&amp;rsquo;est lent et peu fiable.
La pratique idéale consiste à utiliser les API proposées par les fournisseurs de messagerie, ou dans le cas de Facebook le service des outils de développement qui expose une API pour créer des comptes de test, des amis, etc.</description>
    </item>
    
    <item>
      <title>Dépéndence des tests</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/test_dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/test_dependency/</guid>
      <description>Page being translated from English to French. Do you speak French? Help us to translate it by sending us pull requests!
 A common idea and misconception about automated testing is regarding a specific test order. Your tests should be able to run in any order, and not rely on other tests to complete in order to be successful.</description>
    </item>
    
    <item>
      <title>Test de performance</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/performance_testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/performance_testing/</guid>
      <description>Test de performances avec Selenium et WebDriver n&amp;rsquo;est généralement pas conseillé. Pas parce qu&amp;rsquo;il est incapable mais parce qu&amp;rsquo;il n&amp;rsquo;est pas optimisé pour le travail et il est peu probable que vous obteniez de bons résultats.
Cela peut sembler idéal pour tester les performances dans le contexte de l&amp;rsquo;utilisateur mais une suite de tests WebDriver sont soumis à de nombreux points de fragilité externe et interne qui échappent à votre contrôle; par exemple la vitesse de démarrage du navigateur, vitesse des serveurs HTTP, réponse des serveurs tiers qui hébergent JavaScript ou CSS, et la pénalité d&amp;rsquo;instrumentation de l&amp;rsquo;implémentation WebDriver elle-même.</description>
    </item>
    
    <item>
      <title>Link spidering</title>
      <link>https://selenium.dev/documentation/fr/worst_practices/link_spidering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://selenium.dev/documentation/fr/worst_practices/link_spidering/</guid>
      <description>Utilisation de WebDriver pour parcourir des liens n&amp;rsquo;est pas une pratique recommandée non pas parce que cela ne peut pas être fait, mais parce que ce n&amp;rsquo;est certainement pas l&amp;rsquo;outil le plus idéal. WebDriver a besoin de temps pour démarrer, et peut prendre plusieurs secondes jusqu&amp;rsquo;à une minute en fonction de la façon dont votre test est écrit, juste pour accéder à la page et parcourir le DOM.
Au lieu d&amp;rsquo;utiliser WebDriver pour cela, vous pourriez économiser une tonne de temps en exécutant une commande curl, ou en utilisant une bibliothèque telle que BeautifulSoup puisque ces méthodes ne reposent pas sur la création d&amp;rsquo;un navigateur et la navigation vers une page.</description>
    </item>
    
  </channel>
</rss>